---
// // @ts-ignore
// import { pwaAssetsHead } from 'virtual:pwa-assets/head'
// // @ts-ignore
// import { pwaInfo } from 'virtual:pwa-info'

import { BaseHead } from 'astro-toolkit/seo'
import { PrefetchNative } from 'astro-toolkit/perf'
import config from 'wathqny:config'

import type { LayoutInterface } from './types/components'

export interface Props extends LayoutInterface {}

const { title, keywords, description, OGImage } = Astro.props as Props

const METATITLE = title
  ? `${title} - ${config.siteName}`
  : config.siteName
const METAIMAGE = OGImage?.src ?? config.OGImage?.src
const METAIMAGEALT = OGImage?.alt ?? config.OGImage?.alt
const METADESCRIPTION = description ?? config.description
const METAKEYWORDS = keywords ?? [...(config.keywords || [])]
---

<BaseHead
  title={METATITLE}
  description={METADESCRIPTION}
  keywords={METAKEYWORDS}
  OGImage={{ src: METAIMAGE, alt: METAIMAGEALT }}
  GSVToken={config.GSVToken}
  extend={{
    link: [
      {
        href: config.font,
        rel: 'preload',
        as: 'font',
        type: 'font/woff2',
        crossorigin: 'anonymous',
      },
      ...config?.css
    ],
  }}
>
  <!-- {pwaAssetsHead.themeColor && <meta name="theme-color" content={pwaAssetsHead.themeColor.content} />}
  {pwaAssetsHead.links.map((link: astroHTML.JSX.IntrinsicAttributes & astroHTML.JSX.LinkHTMLAttributes) => <link {...link} />)}
  {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />} -->
  <!-- <script src="./pwa.ts"></script> -->
  <meta name="color-scheme" content="dark light" />
  <link rel="icon" type="image/x-icon" href="/icon.svg">
  <script is:inline>
    const root = document.documentElement;

    if (
      localStorage.theme === "dark" ||(!("theme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches)) {
      root?.classList.replace("light", "dark");
    } else {
      root?.classList.replace("dark", "light");
    }
  </script>
  <!-- <PrefetchNative /> -->
  <meta name="generator" content="wathqny 1.0 Astro powerd" />
  <slot />
</BaseHead>