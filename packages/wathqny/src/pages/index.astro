---
import type { MarkdownLayoutProps } from 'astro'
import BaseLayout from '../layouts/BaseLayout.astro'
import { Image } from 'astro:assets'
import Dynamic from 'astro-toolkit/experimental/Dynamic'
import config from 'wathqny:config'

type Props = MarkdownLayoutProps<{
  title?: string
  logo?: {
    src: string
    height: number
    width: number
  }
  subtitle: string
  description: string
  buttons: [{ label: string; href?: string; type?: 'alt' | 'primary' }]
}>

const { frontmatter } = Astro.props

const tag = frontmatter?.title ? 'h1' : 'h2'
const className =
  frontmatter?.title && frontmatter?.subtitle ? 'wtq-title' : 'wtq-subtitle'
---

<BaseLayout>
  <link rel="preload" as="image" href={frontmatter?.logo?.src}>
  <section >
    <main id="main-content" class="wtq-flex-center">
      <div class="wtq-hero wtq-flex-center">
        
      {
        frontmatter?.logo && (
          <Image
            loading="eager"
            alt={config.OGImage.alt}
            height={config.logo.height}
            width={config.logo.width}
            src={config.logo.src}
          />
        )
      }

      {frontmatter?.title && <Dynamic tag={tag} class={className}>{frontmatter?.title}</Dynamic>}

      {frontmatter?.subtitle && <Dynamic tag={tag} class={className}>{frontmatter?.subtitle}</Dynamic>}

      <div class="wtq-get-started">
        {
          frontmatter?.buttons.map((button) => {
            return (
              <a
                
                href={button.href}
                class:list={[
                  "wtq-btn wtq-rounded",
                  { "wtq-alt": button.type === "alt" },
                  { "wtq-theme-color": button.type === "primary" },
                ]}
              >
                {button.label}
              </a>
            );
          })
        }
      </div>
    </div>

    </main>
  </section>

  <slot />
</BaseLayout>
